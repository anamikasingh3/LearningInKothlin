fun collecM()
{
    println("Mutable- mutableList************")
    var mutableList = mutableListOf("Ajay","Vijay","Prakash","Vijay")
    for(element in mutableList){
        println(element)
    }
    println("adding elements")
    mutableList.add("a")
    mutableList.add("ab")
    for(element in mutableList){
        println(element)
    }
    println("Mutable-arrayList************")

    val arrayList: ArrayList<String> = ArrayList<String>(5)

    arrayList.add("Ajay")
    arrayList.add("Vijay")
    arrayList.add("Prakash")
    arrayList.add("Rohan")
    arrayList.add("Vijay")
    println(".......print ArrayList.......")
    for (i in arrayList) {
        println(i)
    }
    println(".......arrayList.remove(3).......")
    arrayList.removeAt(3)
    for (i in arrayList) {
        println(i)
    }
    println("added value")
    arrayList.set(2,"Rohan")
    println( arrayList.get(2))
    println("clear array list")
    arrayList.clear()

    for (i in arrayList) {
        println(i)
    }
    println("Mutable-hashMap*******************")
    val hashMap:HashMap<Int,String> = HashMap<Int,String>()
    hashMap.put(1,"Ajay")
    hashMap.put(3,"Vijay")
    hashMap.put(4,"Prakash")
    hashMap.put(2,"Rohan")

    println(".....traversing hashmap.......")
    for(key in hashMap.keys){
        println("Element at key $key = ${hashMap[key]}")
    }
print("hashmap contains 3 key??")
    println(hashMap.containsKey(3))
    print("hashmap to put value and key")
    hashMap.put(2,"Raj")
    print("hashmap contains delhi value??")
    println(hashMap.containsValue("Delhi"))
    print("hashmap final ")
    for(key in hashMap.keys){
        println("Element at key $key = ${hashMap[key]}")
    }
    print("Mutable-set ****************************8")
    val intmutableSet = mutableSetOf<Int>(2, 6, 4, 29, 4, 5)
    val mutableSet: MutableSet<Int> = mutableSetOf<Int>(6,8,11,22)

    println("....intmutableSet....")
    for(element in intmutableSet){
        println(element)
    }
    println("....Hashset....")
    var hashSet = HashSet<Int>(3)
    val intSet = setOf(6,4,29)
    hashSet.add(2)
    hashSet.add(13)
    hashSet.add(6)
    hashSet.add(5)
    hashSet.add(2)
    hashSet.add(8)
    println("traversing hashSet")
    for (element in hashSet){
        println(element)
    }
}
